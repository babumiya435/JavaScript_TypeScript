** All of these JS execution components (code related to browser APIs and JS engine) are created and stored in RAM memory, then executed through the client CPU. **

Yes, that's correct. Let's break down the process:

Creation and Storage in RAM Memory:

When you visit a webpage containing JavaScript code, the browser fetches the necessary resources (HTML, CSS, JavaScript files) from the web server.
The JavaScript engine, along with the browser APIs and any additional libraries or frameworks used in the webpage, are loaded into the browser's memory (RAM).
These components are stored in memory for the duration of the webpage's interaction.
Execution Through Client CPU:

Once loaded into memory, the JavaScript code is executed by the JavaScript engine, which is a component of the browser.
The JavaScript engine processes the code line by line, performing tasks such as parsing, interpreting, and compiling as necessary.
As the JavaScript code is executed, it may interact with browser APIs to manipulate the Document Object Model (DOM), handle events, make network requests, and more.
All of these operations are handled by the client's CPU (Central Processing Unit).
Dynamic Memory Allocation and Deallocation:

During execution, the JavaScript engine may dynamically allocate memory to store variables, objects, arrays, and other data structures created by the code.
Memory allocation and deallocation are managed by the browser's memory management system, ensuring efficient use of available resources.
CPU-Related Operations:

The CPU executes the instructions generated by the JavaScript engine, performing calculations, data manipulation, and other operations specified by the JavaScript code.
The CPU interacts with the computer's hardware components, including memory, storage, and input/output devices, to carry out these operations.
In summary, JavaScript execution involves loading the necessary components into RAM memory, where they are processed and executed by the client's CPU. The browser's JavaScript engine manages the execution of JavaScript code and interaction with browser APIs, while the CPU handles the actual computation and processing of instructions.